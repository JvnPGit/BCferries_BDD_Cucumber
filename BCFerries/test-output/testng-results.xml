<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-19T19:56:10 IST" name="Default suite" finished-at="2024-09-19T19:56:19 IST" duration-ms="8832">
    <groups>
    </groups>
    <test started-at="2024-09-19T19:56:10 IST" name="Default test" finished-at="2024-09-19T19:56:19 IST" duration-ms="8832">
      <class name="runners.ExecuteRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:runners.ExecuteRunner@63f8276e]" started-at="2024-09-19T19:56:10 IST" name="setUpClass" finished-at="2024-09-19T19:56:11 IST" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="feature(cucumber.api.testng.PickleEventWrapper,cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runners.ExecuteRunner@63f8276e]" started-at="2024-09-19T19:56:11 IST" name="feature" data-provider="features" finished-at="2024-09-19T19:56:19 IST" duration-ms="7898" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA["Core Booking Flow (Southern Gulf Island One-Way Guest Foot Passenger)"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Book Sailings for Unauthenticated User/Guest User"]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There are undefined steps]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There are undefined steps
at cucumber.api.testng.TestCaseResultListener.getError(TestCaseResultListener.java:60)
at cucumber.api.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:72)
at runners.ExecuteRunner.feature(ExecuteRunner.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runners.ExecuteRunner@63f8276e]" started-at="2024-09-19T19:56:19 IST" name="tearDownClass" finished-at="2024-09-19T19:56:19 IST" duration-ms="517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runners.ExecuteRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
